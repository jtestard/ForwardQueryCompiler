/* Generated By:JavaCC: Do not edit this line. QueryParserConstants.java */
package edu.ucsd.forward.query.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface QueryParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int C_SIMPLE_LATIN_LETTER = 11;
  /** RegularExpression Id. */
  int C_DIGIT = 12;
  /** RegularExpression Id. */
  int C_QUOTE = 13;
  /** RegularExpression Id. */
  int C_LEFT_PAREN = 14;
  /** RegularExpression Id. */
  int C_RIGHT_PAREN = 15;
  /** RegularExpression Id. */
  int C_LEFT_BRACE = 16;
  /** RegularExpression Id. */
  int C_RIGHT_BRACE = 17;
  /** RegularExpression Id. */
  int C_LEFT_BRACKET = 18;
  /** RegularExpression Id. */
  int C_RIGHT_BRACKET = 19;
  /** RegularExpression Id. */
  int C_ASTERISK = 20;
  /** RegularExpression Id. */
  int C_PLUS_SIGN = 21;
  /** RegularExpression Id. */
  int C_COMMA = 22;
  /** RegularExpression Id. */
  int C_MINUS_SIGN = 23;
  /** RegularExpression Id. */
  int C_PERIOD = 24;
  /** RegularExpression Id. */
  int C_SOLIDUS = 25;
  /** RegularExpression Id. */
  int C_COLON = 26;
  /** RegularExpression Id. */
  int C_SEMICOLON = 27;
  /** RegularExpression Id. */
  int C_LESS_THAN_OPERATOR = 28;
  /** RegularExpression Id. */
  int C_EQUALS_OPERATOR = 29;
  /** RegularExpression Id. */
  int C_GREATER_THAN_OPERATOR = 30;
  /** RegularExpression Id. */
  int C_UNDERSCORE = 31;
  /** RegularExpression Id. */
  int C_VERTICAL_BAR = 32;
  /** RegularExpression Id. */
  int DT_NOT_EQUALS_OPERATOR = 33;
  /** RegularExpression Id. */
  int DT_GREATER_THAN__OR_EQUALS_OPERATOR = 34;
  /** RegularExpression Id. */
  int DT_LESS_THAN_OR_EQUALS_OPERATOR = 35;
  /** RegularExpression Id. */
  int DT_CONCATENATION_OPERATOR = 36;
  /** RegularExpression Id. */
  int K_ACCESS = 37;
  /** RegularExpression Id. */
  int K_ALL = 38;
  /** RegularExpression Id. */
  int K_AND = 39;
  /** RegularExpression Id. */
  int K_AS = 40;
  /** RegularExpression Id. */
  int K_AT = 41;
  /** RegularExpression Id. */
  int K_AVG = 42;
  /** RegularExpression Id. */
  int K_BAG = 43;
  /** RegularExpression Id. */
  int K_BOOLEAN = 44;
  /** RegularExpression Id. */
  int K_BY = 45;
  /** RegularExpression Id. */
  int K_CALL = 46;
  /** RegularExpression Id. */
  int K_CASE = 47;
  /** RegularExpression Id. */
  int K_CAST = 48;
  /** RegularExpression Id. */
  int K_CREATE = 49;
  /** RegularExpression Id. */
  int K_CROSS = 50;
  /** RegularExpression Id. */
  int K_COLLECTION = 51;
  /** RegularExpression Id. */
  int K_COUNT = 52;
  /** RegularExpression Id. */
  int K_DATA = 53;
  /** RegularExpression Id. */
  int K_DATE = 54;
  /** RegularExpression Id. */
  int K_DECIMAL = 55;
  /** RegularExpression Id. */
  int K_DEFAULT = 56;
  /** RegularExpression Id. */
  int K_DELETE = 57;
  /** RegularExpression Id. */
  int K_DISTINCT = 58;
  /** RegularExpression Id. */
  int K_DOUBLE = 59;
  /** RegularExpression Id. */
  int K_DROP = 60;
  /** RegularExpression Id. */
  int K_ELEMENT = 61;
  /** RegularExpression Id. */
  int K_ELSE = 62;
  /** RegularExpression Id. */
  int K_END = 63;
  /** RegularExpression Id. */
  int K_EXCEPT = 64;
  /** RegularExpression Id. */
  int K_EXISTS = 65;
  /** RegularExpression Id. */
  int K_FALSE = 66;
  /** RegularExpression Id. */
  int K_FETCH = 67;
  /** RegularExpression Id. */
  int K_FLATTEN = 68;
  /** RegularExpression Id. */
  int K_FLOAT = 69;
  /** RegularExpression Id. */
  int K_FOR = 70;
  /** RegularExpression Id. */
  int K_FROM = 71;
  /** RegularExpression Id. */
  int K_FULL = 72;
  /** RegularExpression Id. */
  int K_GET = 73;
  /** RegularExpression Id. */
  int K_GROUP = 74;
  /** RegularExpression Id. */
  int K_HAVING = 75;
  /** RegularExpression Id. */
  int K_IN = 76;
  /** RegularExpression Id. */
  int K_INLINE = 77;
  /** RegularExpression Id. */
  int K_INNER = 78;
  /** RegularExpression Id. */
  int K_INSERT = 79;
  /** RegularExpression Id. */
  int K_INTEGER = 80;
  /** RegularExpression Id. */
  int K_INTERSECT = 81;
  /** RegularExpression Id. */
  int K_INTO = 82;
  /** RegularExpression Id. */
  int K_IS = 83;
  /** RegularExpression Id. */
  int K_JOIN = 84;
  /** RegularExpression Id. */
  int K_KEY = 85;
  /** RegularExpression Id. */
  int K_LEFT = 86;
  /** RegularExpression Id. */
  int K_LIKE = 87;
  /** RegularExpression Id. */
  int K_LIMIT = 88;
  /** RegularExpression Id. */
  int K_LIST = 89;
  /** RegularExpression Id. */
  int K_LONG = 90;
  /** RegularExpression Id. */
  int K_MAX = 91;
  /** RegularExpression Id. */
  int K_MIN = 92;
  /** RegularExpression Id. */
  int K_NATURAL = 93;
  /** RegularExpression Id. */
  int K_NEST = 94;
  /** RegularExpression Id. */
  int K_NEW = 95;
  /** RegularExpression Id. */
  int K_NOT = 96;
  /** RegularExpression Id. */
  int K_NULL = 97;
  /** RegularExpression Id. */
  int K_OBJECT = 98;
  /** RegularExpression Id. */
  int K_OFFSET = 99;
  /** RegularExpression Id. */
  int K_ON = 100;
  /** RegularExpression Id. */
  int K_ONLY = 101;
  /** RegularExpression Id. */
  int K_OR = 102;
  /** RegularExpression Id. */
  int K_ORDER = 103;
  /** RegularExpression Id. */
  int K_OUTER = 104;
  /** RegularExpression Id. */
  int K_PRIMARY = 105;
  /** RegularExpression Id. */
  int K_RIGHT = 106;
  /** RegularExpression Id. */
  int K_ROW = 107;
  /** RegularExpression Id. */
  int K_ROWS = 108;
  /** RegularExpression Id. */
  int K_SELECT = 109;
  /** RegularExpression Id. */
  int K_SET = 110;
  /** RegularExpression Id. */
  int K_STRING = 111;
  /** RegularExpression Id. */
  int K_STRING_AGG = 112;
  /** RegularExpression Id. */
  int K_SUM = 113;
  /** RegularExpression Id. */
  int K_SWITCH = 114;
  /** RegularExpression Id. */
  int K_THEN = 115;
  /** RegularExpression Id. */
  int K_TIMESTAMP = 116;
  /** RegularExpression Id. */
  int K_TRUE = 117;
  /** RegularExpression Id. */
  int K_TUPLE = 118;
  /** RegularExpression Id. */
  int K_UNION = 119;
  /** RegularExpression Id. */
  int K_UPDATE = 120;
  /** RegularExpression Id. */
  int K_VALUES = 121;
  /** RegularExpression Id. */
  int K_VARCHAR = 122;
  /** RegularExpression Id. */
  int K_WHEN = 123;
  /** RegularExpression Id. */
  int K_WHERE = 124;
  /** RegularExpression Id. */
  int K_WITH = 125;
  /** RegularExpression Id. */
  int K_XHTML = 126;
  /** RegularExpression Id. */
  int A_ACTION = 127;
  /** RegularExpression Id. */
  int A_AJAX = 128;
  /** RegularExpression Id. */
  int A_ASYNC = 129;
  /** RegularExpression Id. */
  int A_BEGIN = 130;
  /** RegularExpression Id. */
  int A_DECLARE = 131;
  /** RegularExpression Id. */
  int A_ELSIF = 132;
  /** RegularExpression Id. */
  int A_EXCEPTION = 133;
  /** RegularExpression Id. */
  int A_FUNCTION = 134;
  /** RegularExpression Id. */
  int A_IF = 135;
  /** RegularExpression Id. */
  int A_IMMUTABLE = 136;
  /** RegularExpression Id. */
  int A_OTHERS = 137;
  /** RegularExpression Id. */
  int A_POST = 138;
  /** RegularExpression Id. */
  int A_RAISE = 139;
  /** RegularExpression Id. */
  int A_RETURN = 140;
  /** RegularExpression Id. */
  int A_RETURNS = 141;
  /** RegularExpression Id. */
  int A_SYNC = 142;
  /** RegularExpression Id. */
  int NK_ASC = 143;
  /** RegularExpression Id. */
  int NK_CHARACTER_LENGTH = 144;
  /** RegularExpression Id. */
  int NK_CHAR_LENGTH = 145;
  /** RegularExpression Id. */
  int NK_COALESCE = 146;
  /** RegularExpression Id. */
  int NK_DESC = 147;
  /** RegularExpression Id. */
  int NK_FIRST = 148;
  /** RegularExpression Id. */
  int NK_LAST = 149;
  /** RegularExpression Id. */
  int NK_LOWER = 150;
  /** RegularExpression Id. */
  int NK_MOD = 151;
  /** RegularExpression Id. */
  int NK_NEXT = 152;
  /** RegularExpression Id. */
  int NK_NULLS = 153;
  /** RegularExpression Id. */
  int NK_SUBSTRING = 154;
  /** RegularExpression Id. */
  int NK_UPPER = 155;
  /** RegularExpression Id. */
  int NK_POSITION = 156;
  /** RegularExpression Id. */
  int L_NONQUOTE_CHARACTER = 157;
  /** RegularExpression Id. */
  int L_QUOTE_SYMBOL = 158;
  /** RegularExpression Id. */
  int END_QUOTE = 159;
  /** RegularExpression Id. */
  int L_CHARACTER_STRING_LITERAL = 160;
  /** RegularExpression Id. */
  int L_SIGN = 161;
  /** RegularExpression Id. */
  int L_UNSIGNED_INTEGER = 162;
  /** RegularExpression Id. */
  int L_EXACT_NUMERIC_LITERAL = 163;
  /** RegularExpression Id. */
  int L_APPROXIMATE_NUMERIC_LITERAL = 164;
  /** RegularExpression Id. */
  int L_ECHAR = 165;
  /** RegularExpression Id. */
  int L_DOUBLE_QUOTE_LITERAL = 166;
  /** RegularExpression Id. */
  int SQL_LANGUAGE_IDENTIFIER = 167;
  /** RegularExpression Id. */
  int ESCAPED_LANGUAGE_IDENTIFIER = 168;
  /** RegularExpression Id. */
  int URL_SAFE = 169;
  /** RegularExpression Id. */
  int URL_EXTRA = 170;
  /** RegularExpression Id. */
  int URL_UCHAR = 171;
  /** RegularExpression Id. */
  int URL_UNRESERVED = 172;
  /** RegularExpression Id. */
  int URL_HSEGMENT = 173;
  /** RegularExpression Id. */
  int URL_HPATH = 174;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;
  /** Lexical state. */
  int IN_LITERAL = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\f\"",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"/*\"",
    "<token of kind 9>",
    "\"*/\"",
    "<C_SIMPLE_LATIN_LETTER>",
    "<C_DIGIT>",
    "\"\\\'\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"*\"",
    "\"+\"",
    "\",\"",
    "\"-\"",
    "\".\"",
    "\"/\"",
    "\":\"",
    "\";\"",
    "\"<\"",
    "\"=\"",
    "\">\"",
    "\"_\"",
    "\"|\"",
    "<DT_NOT_EQUALS_OPERATOR>",
    "<DT_GREATER_THAN__OR_EQUALS_OPERATOR>",
    "<DT_LESS_THAN_OR_EQUALS_OPERATOR>",
    "<DT_CONCATENATION_OPERATOR>",
    "\"ACCESS\"",
    "\"ALL\"",
    "\"AND\"",
    "\"AS\"",
    "\"AT\"",
    "\"AVG\"",
    "\"BAG\"",
    "\"BOOLEAN\"",
    "\"BY\"",
    "\"CALL\"",
    "\"CASE\"",
    "\"CAST\"",
    "\"CREATE\"",
    "\"CROSS\"",
    "\"COLLECTION\"",
    "\"COUNT\"",
    "\"DATA\"",
    "\"DATE\"",
    "\"DECIMAL\"",
    "\"DEFAULT\"",
    "\"DELETE\"",
    "\"DISTINCT\"",
    "\"DOUBLE\"",
    "\"DROP\"",
    "\"ELEMENT\"",
    "\"ELSE\"",
    "\"END\"",
    "\"EXCEPT\"",
    "\"EXISTS\"",
    "\"FALSE\"",
    "\"FETCH\"",
    "\"FLATTEN\"",
    "\"FLOAT\"",
    "\"FOR\"",
    "\"FROM\"",
    "\"FULL\"",
    "\"GET\"",
    "\"GROUP\"",
    "\"HAVING\"",
    "\"IN\"",
    "\"INLINE\"",
    "\"INNER\"",
    "\"INSERT\"",
    "\"INTEGER\"",
    "\"INTERSECT\"",
    "\"INTO\"",
    "\"IS\"",
    "\"JOIN\"",
    "\"KEY\"",
    "\"LEFT\"",
    "\"LIKE\"",
    "\"LIMIT\"",
    "\"LIST\"",
    "\"LONG\"",
    "\"MAX\"",
    "\"MIN\"",
    "\"NATURAL\"",
    "\"NEST\"",
    "\"NEW\"",
    "\"NOT\"",
    "\"NULL\"",
    "\"OBJECT\"",
    "\"OFFSET\"",
    "\"ON\"",
    "\"ONLY\"",
    "\"OR\"",
    "\"ORDER\"",
    "\"OUTER\"",
    "\"PRIMARY\"",
    "\"RIGHT\"",
    "\"ROW\"",
    "\"ROWS\"",
    "\"SELECT\"",
    "\"SET\"",
    "\"STRING\"",
    "\"STRING_AGG\"",
    "\"SUM\"",
    "\"SWITCH\"",
    "\"THEN\"",
    "\"TIMESTAMP\"",
    "\"TRUE\"",
    "\"TUPLE\"",
    "\"UNION\"",
    "\"UPDATE\"",
    "\"VALUES\"",
    "\"VARCHAR\"",
    "\"WHEN\"",
    "\"WHERE\"",
    "\"WITH\"",
    "\"XHTML\"",
    "\"ACTION\"",
    "\"AJAX\"",
    "\"ASYNC\"",
    "\"BEGIN\"",
    "\"DECLARE\"",
    "\"ELSIF\"",
    "\"EXCEPTION\"",
    "\"FUNCTION\"",
    "\"IF\"",
    "\"IMMUTABLE\"",
    "\"OTHERS\"",
    "\"POST\"",
    "\"RAISE\"",
    "\"RETURN\"",
    "\"RETURNS\"",
    "\"SYNC\"",
    "\"ASC\"",
    "\"CHARACTER_LENGTH\"",
    "\"CHAR_LENGTH\"",
    "\"COALESCE\"",
    "\"DESC\"",
    "\"FIRST\"",
    "\"LAST\"",
    "\"LOWER\"",
    "\"MOD\"",
    "\"NEXT\"",
    "\"NULLS\"",
    "\"SUBSTRING\"",
    "\"UPPER\"",
    "\"POSITION\"",
    "<L_NONQUOTE_CHARACTER>",
    "\"\\\'\\\'\"",
    "\"\\\'\"",
    "<L_CHARACTER_STRING_LITERAL>",
    "<L_SIGN>",
    "<L_UNSIGNED_INTEGER>",
    "<L_EXACT_NUMERIC_LITERAL>",
    "<L_APPROXIMATE_NUMERIC_LITERAL>",
    "<L_ECHAR>",
    "<L_DOUBLE_QUOTE_LITERAL>",
    "<SQL_LANGUAGE_IDENTIFIER>",
    "<ESCAPED_LANGUAGE_IDENTIFIER>",
    "\"$\"",
    "\"!\"",
    "<URL_UCHAR>",
    "<URL_UNRESERVED>",
    "<URL_HSEGMENT>",
    "<URL_HPATH>",
  };

}
